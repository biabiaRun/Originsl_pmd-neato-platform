if(NOT ${ROYALE_USE_SPECTRE})
    return()
endif()

set(PROCESSING_SPECTRE_HEADER_DIR "${CMAKE_CURRENT_SOURCE_DIR}/inc;${CMAKE_CURRENT_SOURCE_DIR}/inc/spectre" CACHE STRING "" FORCE)

set (SPECTRE_API_BASE_NAME "spectre")
if(${SPECTRE_TARGET_PLATFORM} STREQUAL APPLE)
    set(SPECTRE_LIB_DIR_START "OSX")
    set(SPECTRE_LIB_DIR_REST "")
else()
    set(PLATFORM_DIR ${SPECTRE_TARGET_PLATFORM})
    # Convert the platform directory to upper case for the first letter
    # and lower case for the following ones
    string(SUBSTRING ${PLATFORM_DIR} 0 1 SPECTRE_LIB_DIR_START)
    string(SUBSTRING ${PLATFORM_DIR} 1 -1 SPECTRE_LIB_DIR_REST)
    string(TOUPPER ${SPECTRE_LIB_DIR_START} SPECTRE_LIB_DIR_START)
    string(TOLOWER ${SPECTRE_LIB_DIR_REST} SPECTRE_LIB_DIR_REST)
endif()

# Find directory
set(PROCESSING_SPECTRE_SUBFOLDER "${CMAKE_CURRENT_SOURCE_DIR}/lib/${SPECTRE_LIB_DIR_START}${SPECTRE_LIB_DIR_REST}/${ARCHITECTURE}/${ARCHITECTURE_BITNESS}Bit" CACHE INTERNAL "")

# Check if folder exists
if (NOT EXISTS ${PROCESSING_SPECTRE_SUBFOLDER})
message(FATAL_ERROR "Could not find the precompiled Spectre library folder ${PROCESSING_SPECTRE_SUBFOLDER} for your platform.")
endif()

add_library( spectre SHARED IMPORTED GLOBAL)
set_property( TARGET spectre PROPERTY IMPORTED_LOCATION ${PROCESSING_SPECTRE_SUBFOLDER}/${CMAKE_SHARED_LIBRARY_PREFIX}${SPECTRE_API_BASE_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX})
set_property( TARGET spectre PROPERTY IMPORTED_IMPLIB ${PROCESSING_SPECTRE_SUBFOLDER}/${SPECTRE_API_BASE_NAME}.lib)

#Retrieve Spectre version from version.h
FILE(READ "${CMAKE_CURRENT_SOURCE_DIR}/inc/spectre/SpectreConfig.hpp" SPECTREVERSIONFILE)
STRING(REGEX MATCH "[0-9]+(\\.[0-9]+)+" SPECTREVERSIONOUTPUT "${SPECTREVERSIONFILE}")
MESSAGE(STATUS "Spectre version : ${SPECTREVERSIONOUTPUT}")

add_custom_target(copy_spectre ALL
    COMMAND ${CMAKE_COMMAND} -E copy_if_different "${PROCESSING_SPECTRE_SUBFOLDER}/${CMAKE_SHARED_LIBRARY_PREFIX}${SPECTRE_API_BASE_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}" "${ROYALE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_SHARED_LIBRARY_PREFIX}${SPECTRE_API_BASE_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}"
    COMMENT "Copying Spectre from '${PROCESSING_SPECTRE_SUBFOLDER}/${CMAKE_SHARED_LIBRARY_PREFIX}${SPECTRE_API_BASE_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}' to '${ROYALE_RUNTIME_OUTPUT_DIRECTORY}/${CMAKE_SHARED_LIBRARY_PREFIX}${SPECTRE_API_BASE_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX}'" VERBATIM
    )
SET_TARGET_PROPERTIES(copy_spectre
    PROPERTIES
    FOLDER tools
    )
